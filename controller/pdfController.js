const PDFDocument = require('pdfkit');
const { PassThrough } = require('stream');

const generatePDF = async (form, user) => {
  return new Promise((resolve, reject) => {
    const doc = new PDFDocument({ margin: 50 });
    const stream = new PassThrough(); // Memory stream

    let buffers = [];
    stream.on('data', (chunk) => buffers.push(chunk));
    stream.on('end', () => resolve(Buffer.concat(buffers))); // Return PDF as buffer
    stream.on('error', (err) => reject(err));

    doc.pipe(stream);

    // **Title**
    doc.font('Helvetica-Bold').fontSize(20).fillColor('#2E86C1').text('Health Inspection Report', { align: 'center' });
    doc.moveDown(1);

    // **User Details (Excludes userType)**
    doc.font('Helvetica-Bold').fontSize(14).fillColor('black').text('Patient Information');
    doc.moveTo(50, doc.y + 5).lineTo(550, doc.y + 5).stroke(); // Divider
    doc.moveDown(0.5);

    doc.font('Helvetica').fontSize(12);
    doc.text(`Name: ${user.name}`);
    doc.text(`Email: ${user.email}`);
    doc.text(`Mobile: ${user.mobile}`);
    doc.text(`Age: ${user.age} years`);
    doc.text(`Gender: ${user.gender}`);
    doc.moveDown();

    // **Inspection Details**
    doc.font('Helvetica-Bold').fontSize(14).text('Inspection Details');
    doc.moveTo(50, doc.y + 5).lineTo(550, doc.y + 5).stroke();
    doc.moveDown(0.5);

    doc.font('Helvetica').fontSize(12);
    doc.text(`Inspector: ${form.inspectorName}`);
    doc.text(`Inspection Date: ${new Date().toDateString()}`);
    doc.moveDown();

    // **Health Measurements**
    doc.font('Helvetica-Bold').fontSize(14).text('Health Measurements');
    doc.moveTo(50, doc.y + 5).lineTo(550, doc.y + 5).stroke();
    doc.moveDown(0.5);

    doc.font('Helvetica').fontSize(12);
    doc.text(`Blood Pressure: ${form.bloodPressure}`);
    doc.text(`Heart Rate: ${form.heartRate} bpm`);
    doc.text(`Temperature: ${form.temperature}Â°C`);
    doc.text(`Respiratory Rate: ${form.respiratoryRate} breaths/min`);
    doc.text(`Blood Sugar: ${form.bloodSugar ? form.bloodSugar + ' mg/dL' : 'N/A'}`);
    doc.text(`Weight: ${form.weight} kg`);
    doc.text(`Height: ${form.height} cm`);
    doc.text(`BMI: ${form.bmi || 'N/A'}`);
    doc.moveDown();

    // **Medical History**
    doc.font('Helvetica-Bold').fontSize(14).text('Medical History');
    doc.moveTo(50, doc.y + 5).lineTo(550, doc.y + 5).stroke();
    doc.moveDown(0.5);

    doc.font('Helvetica').fontSize(12);
    doc.text(`Allergies: ${form.allergies.length ? form.allergies.join(', ') : 'None'}`);
    doc.text(`Chronic Conditions: ${form.chronicConditions.length ? form.chronicConditions.join(', ') : 'None'}`);
    doc.text(`Medications: ${form.medications.length ? form.medications.join(', ') : 'None'}`);
    doc.moveDown();

    // **Lifestyle**
    doc.font('Helvetica-Bold').fontSize(14).text('Lifestyle Factors');
    doc.moveTo(50, doc.y + 5).lineTo(550, doc.y + 5).stroke();
    doc.moveDown(0.5);

    doc.font('Helvetica').fontSize(12);
    doc.text(`Smoking: ${form.smoking ? 'Yes' : 'No'}`);
    doc.text(`Alcohol Consumption: ${form.alcoholConsumption ? 'Yes' : 'No'}`);
    doc.moveDown();

    // **Additional Notes**
    doc.font('Helvetica-Bold').fontSize(14).text('Additional Notes');
    doc.moveTo(50, doc.y + 5).lineTo(550, doc.y + 5).stroke();
    doc.moveDown(0.5);

    doc.font('Helvetica').fontSize(12).text(form.notes || 'None');
    doc.moveDown(2);

    // **Footer**
    doc.fontSize(10).fillColor('gray').text('Generated by Health Inspection System', { align: 'center' });

    doc.end();
  });
};

module.exports = generatePDF;
